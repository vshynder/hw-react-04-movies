{"version":3,"sources":["components/MoviePreview.js","components/RenderMovies.js","constants.js","components/screens/Homepage.js","components/screens/MoviesPage.js","components/MoviePage.js","components/screens/MovieInfo.js","App.js","index.js"],"names":["MovieProview","props","path","movie","id","className","to","title","RenderMovies","movies","map","getDetails","handleMovieClick","key","Homepage","state","fetchPopular","a","fetch","CONSTANTS","moviesPromise","json","this","then","results","setState","React","Component","MoviesPage","search","handleSubmit","e","preventDefault","query","split","join","fetchMovies","resp","response","handleChange","value","target","onSubmit","onChange","type","placeholder","MovieCard","genres","reduce","acc","genre","name","substring","length","location","castTo","pathname","reviewsTo","console","log","alt","src","poster_path","vote_average","overview","withRouter","MovieInfo","loadMovie","movieId","match","params","responce","movieCard","App","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c1f36d9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MovieProview = (props) => {\n  const path = `/movies/${props.movie.id}`;\n  return (\n    <Link className=\"movies-list__link\" to={path}>\n      <li className=\"movies-list__movie\">{props.movie.title}</li>\n    </Link>\n  );\n};\n\nexport default MovieProview;\n","import React from \"react\";\nimport MoviesPreview from \"./MoviePreview\";\n\nconst RenderMovies = (props) => {\n  return props.movies.map((movie) => (\n    <MoviesPreview\n      getDetails={props.handleMovieClick}\n      key={movie.id}\n      movie={movie}\n    />\n  ));\n};\n\nexport default RenderMovies;\n","export default {\n  API_KEY: \"be244f548a27d8c36fc000d6ba379c12\",\n};\n","import React from \"react\";\nimport RenderMovies from \"../RenderMovies\";\n\nimport CONSTANTS from \"../../constants\";\n\nclass Homepage extends React.Component {\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    this.fetchPopular().then(({ results }) => {\n      this.setState({ movies: results });\n    });\n  }\n\n  fetchPopular = async () => {\n    const moviesPromise = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${CONSTANTS.API_KEY}&language=en-US&page=1`\n    );\n\n    const movies = await moviesPromise.json();\n    return movies;\n  };\n\n  render() {\n    return (\n      <ul className=\"movies-list\">\n        <RenderMovies movies={this.state.movies} />\n      </ul>\n    );\n  }\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport CONSTANTS from \"../../constants\";\nimport RenderMovies from \"../RenderMovies\";\n\nclass MoviesPage extends React.Component {\n  state = {\n    search: \"\",\n    movies: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.search === \"\") return;\n    const query = this.state.search.split(\" \").join(\"+\");\n    this.fetchMovies(query).then(({ results }) => {\n      const resp = <RenderMovies movies={results} />;\n      this.setState({ search: \"\", movies: resp });\n    });\n  };\n\n  fetchMovies = async (query) => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${CONSTANTS.API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    const movies = await response.json();\n    return movies;\n  };\n\n  handleChange = (e) => {\n    const { value } = e.target;\n    this.setState({ search: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <input\n            onChange={this.handleChange}\n            className=\"form__input\"\n            type=\"text\"\n            placeholder=\"Search movies...\"\n            value={this.state.search}\n          />\n          <button className=\"form__submit\" type=\"submit\">\n            Search\n          </button>\n        </form>\n\n        <ul className=\"movies-list\">\n          {this.state.movies ? (\n            this.state.movies\n          ) : (\n            <li className=\"movies-list__movie\">No movies found</li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default MoviesPage;\n","import React from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Link,\n  withRouter,\n} from \"react-router-dom\";\n\nconst MoviePage = (props) => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/review\">\n          <MovieCard path=\"review\" {...props} />\n        </Route>\n        <Route path=\"/cast\">\n          <MovieCard path=\"cast\" {...props} />\n        </Route>\n        <Route path=\"/\">\n          <MovieCard {...props} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nconst MovieCard = (props) => {\n  let genres = props.genres.reduce((acc, genre) => {\n    acc += `${genre.name}, `;\n    return acc;\n  }, \"\");\n  genres = genres.substring(0, genres.length - 2);\n  const { location } = props;\n  const castTo = `${location.pathname}/cast`;\n  const reviewsTo = `${location.pathname}/reviews`;\n  console.log(props.path);\n  return (\n    <div className=\"movie-container\">\n      <div className=\"movie-card\">\n        <div className=\"movie-card__image\">\n          <img\n            className=\"movie-card__image--src\"\n            alt={props.title}\n            src={`https://image.tmdb.org/t/p/original/${props.poster_path}`}\n          />\n        </div>\n        <div className=\"movie-card__text\">\n          <h1 className=\"movie-card__title\">{props.title}</h1>\n          <p className=\"movie-card__votes\">\n            Average vote: {props.vote_average}\n          </p>\n          <h2 className=\"movie-card__overview\">Overview</h2>\n          <p className=\"movie-card__overview--desc\">{props.overview}</p>\n          <h2 className=\"movie-card__genres\">Genres</h2>\n          <div className=\"movie-card__genres--desc\">{genres}</div>\n        </div>\n      </div>\n      <div className=\"additional__info\">\n        <h3 className=\"additional__info--name\">Additional information</h3>\n        <ul className=\"additional__info--list\">\n          <li className=\"additional__info--listItem\">\n            <Link to={castTo} className=\"additional__info--link\">\n              Cast\n            </Link>\n          </li>\n\n          <li className=\"additional__info--listItem\">\n            <Link to={reviewsTo} className=\"additional__info--link\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      {props.path === \"cast\" ? (\n        <div>Cast loading</div>\n      ) : props.path === \"review\" ? (\n        <div>Review Loading</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default withRouter(MoviePage);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport MoviePage from \"../MoviePage\";\nimport CONSTANTS from \"../../constants\";\n\nclass MovieInfo extends React.Component {\n  state = {\n    movie: \"\",\n  };\n\n  componentDidMount() {\n    this.loadMovie().then((movie) => {\n      const movieCard = <MoviePage {...movie} />;\n      this.setState({ movie: movieCard });\n    });\n  }\n\n  loadMovie = async () => {\n    const { movieId } = this.props.match.params;\n\n    const responce = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${CONSTANTS.API_KEY}&language=en-US`\n    );\n    const movie = await responce.json();\n    return movie;\n  };\n\n  render() {\n    return <div>{this.state.movie ? this.state.movie : <p>Loading</p>}</div>;\n  }\n}\n\nexport default withRouter(MovieInfo);\n","import React from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter, Link, Switch, Route } from \"react-router-dom\";\nimport Homepage from \"./components/screens/Homepage\";\nimport MoviesPage from \"./components/screens/MoviesPage\";\nimport MovieInfo from \"./components/screens/MovieInfo\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className=\"nav\">\n          <Link className=\"nav__link\" to=\"/\">\n            Home\n          </Link>\n          <Link className=\"nav__link\" to=\"/movies\">\n            Movies\n          </Link>\n        </div>\n        <Switch>\n          <Route path=\"/movies/:movieId\" component={MovieInfo} />\n          <Route path=\"/movies\" component={MoviesPage} />\n          <Route exact path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}